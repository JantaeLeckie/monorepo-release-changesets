# when the release pull request has been merged, it should contain all version 
# bumped packages. Run a script to create an release to github updated  

name: 'Create GitHub Releases'
on:
  pull_request:
    branches:
      - 'testing-2'
    types: [closed]

jobs:
  github_release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.head_ref, 'changeset-release')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Packages
        run:
          yarn install
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip --junk-paths my-artifact README.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: release_v1.1.${{ github.run_number }}
          release_name: 'Release #${{ github.run_number }} ${{ github.ref }}'
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip

  github_packages:
    needs: github_release
    runs-on: ubuntu-latest 
    permissions: 
      contents: read
      packages: write 
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: 'JantaeLeckie'
      - run: yarn 
      - run: yarn release-ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  npm_release:
    needs: github_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org/'
      - run: yarn
      - run: npm run release-ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  
  test_npm_release:
    needs: github_release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release Pull Request or Publish to npm
        uses: changesets/action@v1
        with:
          publish: npm run release-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}